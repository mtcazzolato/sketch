#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 6.0.1
#  in conjunction with Tcl version 8.6
#    Sep 10, 2021 03:55:40 PM -03  platform: Linux

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import similarity_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    similarity_support.set_Tk_var()
    top = ToplevelSimilarity (root)
    similarity_support.init(root, top)
    root.mainloop()

w = None
def create_ToplevelSimilarity(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_ToplevelSimilarity(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    similarity_support.set_Tk_var()
    top = ToplevelSimilarity (w)
    similarity_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_ToplevelSimilarity():
    global w
    w.destroy()
    w = None

class ToplevelSimilarity:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("1501x919+124+101")
        top.minsize(1, 1)
        top.maxsize(1905, 1050)
        top.resizable(1,  1)
        top.title("Sketch: Similarity Search and Tuple Correlation")
        top.configure(highlightcolor="black")

        self.TFrameScatterMDSTraditional = ttk.Frame(top)
        self.TFrameScatterMDSTraditional.place(relx=0.421, rely=0.141
                , relheight=0.42, relwidth=0.294)
        self.TFrameScatterMDSTraditional.configure(relief='groove')
        self.TFrameScatterMDSTraditional.configure(borderwidth="1")
        self.TFrameScatterMDSTraditional.configure(relief="groove")

        self.LabelframeCorrelationMenu = tk.LabelFrame(top)
        self.LabelframeCorrelationMenu.place(relx=0.013, rely=0.011
                , relheight=0.126, relwidth=0.247)
        self.LabelframeCorrelationMenu.configure(relief='groove')
        self.LabelframeCorrelationMenu.configure(text='''Correlation Analysis (it may take a while)''')

        self.TLabelCorrelationSamplePercent = ttk.Label(self.LabelframeCorrelationMenu)
        self.TLabelCorrelationSamplePercent.place(relx=0.016, rely=0.259
                , height=33, width=120, bordermode='ignore')
        self.TLabelCorrelationSamplePercent.configure(background="#d9d9d9")
        self.TLabelCorrelationSamplePercent.configure(foreground="#000000")
        self.TLabelCorrelationSamplePercent.configure(relief="flat")
        self.TLabelCorrelationSamplePercent.configure(anchor='w')
        self.TLabelCorrelationSamplePercent.configure(justify='left')
        self.TLabelCorrelationSamplePercent.configure(text='''Sample size (%):''')

        self.btnComputeCorrelation = ttk.Button(self.LabelframeCorrelationMenu)
        self.btnComputeCorrelation.place(relx=0.522, rely=0.172, height=42
                , width=154, bordermode='ignore')
        self.btnComputeCorrelation.configure(command=similarity_support.btnComputeCorrelation)
        self.btnComputeCorrelation.configure(takefocus="")
        self.btnComputeCorrelation.configure(text='''Compute Correlation
and Plot Heatmap''')

        self.SpinboxPercentSampleData = tk.Spinbox(self.LabelframeCorrelationMenu, from_=1.0, to=100.0)
        self.SpinboxPercentSampleData.place(relx=0.362, rely=0.319
                , relheight=0.172, relwidth=0.13, bordermode='ignore')
        self.SpinboxPercentSampleData.configure(activebackground="#f9f9f9")
        self.SpinboxPercentSampleData.configure(background="white")
        self.SpinboxPercentSampleData.configure(font="-family {gothic} -size 12")
        self.SpinboxPercentSampleData.configure(highlightbackground="black")
        self.SpinboxPercentSampleData.configure(justify='right')
        self.SpinboxPercentSampleData.configure(selectbackground="blue")
        self.SpinboxPercentSampleData.configure(selectforeground="white")
        self.SpinboxPercentSampleData.configure(textvariable=similarity_support.SpinboxPercentSampleData)

        self.TLabelRunningText = ttk.Label(self.LabelframeCorrelationMenu)
        self.TLabelRunningText.place(relx=0.054, rely=0.69, height=13, width=162
                , bordermode='ignore')
        self.TLabelRunningText.configure(background="#d9d9d9")
        self.TLabelRunningText.configure(foreground="#000000")
        self.TLabelRunningText.configure(relief="flat")
        self.TLabelRunningText.configure(anchor='w')
        self.TLabelRunningText.configure(justify='left')
        self.TLabelRunningText.configure(textvariable=similarity_support.RunningTextVar)

        self.CheckbuttonHeatLegend = tk.Checkbutton(self.LabelframeCorrelationMenu)
        self.CheckbuttonHeatLegend.place(relx=0.541, rely=0.543, relheight=0.25
                , relwidth=0.319, bordermode='ignore')
        self.CheckbuttonHeatLegend.configure(activebackground="#f9f9f9")
        self.CheckbuttonHeatLegend.configure(justify='left')
        self.CheckbuttonHeatLegend.configure(text='''Attribute Name''')
        self.CheckbuttonHeatLegend.configure(variable=similarity_support.varCheckHeatLegend)

        self.CheckbuttonHeatBar = tk.Checkbutton(self.LabelframeCorrelationMenu)
        self.CheckbuttonHeatBar.place(relx=0.538, rely=0.776, relheight=0.147
                , relwidth=0.205, bordermode='ignore')
        self.CheckbuttonHeatBar.configure(activebackground="#f9f9f9")
        self.CheckbuttonHeatBar.configure(justify='left')
        self.CheckbuttonHeatBar.configure(text='''Colorbar''')
        self.CheckbuttonHeatBar.configure(variable=similarity_support.varCheckHeatBar)

        self.TFrameHeatmapFig = ttk.Frame(top)
        self.TFrameHeatmapFig.place(relx=0.013, rely=0.143, relheight=0.789
                , relwidth=0.4)
        self.TFrameHeatmapFig.configure(relief='groove')
        self.TFrameHeatmapFig.configure(borderwidth="2")
        self.TFrameHeatmapFig.configure(relief="groove")

        self.TLabelframe2 = ttk.Labelframe(top)
        self.TLabelframe2.place(relx=0.266, rely=0.011, relheight=0.125
                , relwidth=0.65)
        self.TLabelframe2.configure(relief='groove')
        self.TLabelframe2.configure(text='''Similarity Query weighted by Correlation''')
        self.TLabelframe2.configure(relief="groove")

        self.TLabelQIndex = ttk.Label(self.TLabelframe2)
        self.TLabelQIndex.place(relx=0.146, rely=0.261, height=13, width=140
                , bordermode='ignore')
        self.TLabelQIndex.configure(background="#d9d9d9")
        self.TLabelQIndex.configure(foreground="#000000")
        self.TLabelQIndex.configure(font="TkDefaultFont")
        self.TLabelQIndex.configure(relief="flat")
        self.TLabelQIndex.configure(anchor='w')
        self.TLabelQIndex.configure(justify='left')
        self.TLabelQIndex.configure(text='''Object query index''')

        self.TLabelKValue = ttk.Label(self.TLabelframe2)
        self.TLabelKValue.place(relx=0.148, rely=0.522, height=13, width=121
                , bordermode='ignore')
        self.TLabelKValue.configure(background="#d9d9d9")
        self.TLabelKValue.configure(foreground="#000000")
        self.TLabelKValue.configure(font="TkDefaultFont")
        self.TLabelKValue.configure(relief="flat")
        self.TLabelKValue.configure(anchor='w')
        self.TLabelKValue.configure(justify='left')
        self.TLabelKValue.configure(text='''k value (for kNN)''')

        self.SpinboxQueryIndex = tk.Spinbox(self.TLabelframe2, from_=1.0, to=100.0)
        self.SpinboxQueryIndex.place(relx=0.303, rely=0.235, relheight=0.174
                , relwidth=0.052, bordermode='ignore')
        self.SpinboxQueryIndex.configure(activebackground="#f9f9f9")
        self.SpinboxQueryIndex.configure(background="white")
        self.SpinboxQueryIndex.configure(font="-family {gothic} -size 12")
        self.SpinboxQueryIndex.configure(highlightbackground="black")
        self.SpinboxQueryIndex.configure(justify='right')
        self.SpinboxQueryIndex.configure(selectbackground="blue")
        self.SpinboxQueryIndex.configure(selectforeground="white")
        self.SpinboxQueryIndex.configure(textvariable=similarity_support.spinboxQueryIndex)

        self.SpinboxQueryKValue = tk.Spinbox(self.TLabelframe2, from_=1.0, to=100.0)
        self.SpinboxQueryKValue.place(relx=0.303, rely=0.487, relheight=0.174
                , relwidth=0.052, bordermode='ignore')
        self.SpinboxQueryKValue.configure(activebackground="#f9f9f9")
        self.SpinboxQueryKValue.configure(background="white")
        self.SpinboxQueryKValue.configure(font="-family {gothic} -size 12")
        self.SpinboxQueryKValue.configure(highlightbackground="black")
        self.SpinboxQueryKValue.configure(justify='right')
        self.SpinboxQueryKValue.configure(selectbackground="blue")
        self.SpinboxQueryKValue.configure(selectforeground="white")
        self.SpinboxQueryKValue.configure(textvariable=similarity_support.spinboxQueryKNN)

        self.btnRetrieveTuplesCorr = ttk.Button(self.TLabelframe2)
        self.btnRetrieveTuplesCorr.place(relx=0.605, rely=0.565, height=42
                , width=244, bordermode='ignore')
        self.btnRetrieveTuplesCorr.configure(command=similarity_support.btnRetrieveTuplesCorr)
        self.btnRetrieveTuplesCorr.configure(takefocus="")
        self.btnRetrieveTuplesCorr.configure(text='''Run Correlated Query''')

        self.TLabelKValue_1 = ttk.Label(self.TLabelframe2)
        self.TLabelKValue_1.place(relx=0.147, rely=0.783, height=13, width=140
                , bordermode='ignore')
        self.TLabelKValue_1.configure(background="#d9d9d9")
        self.TLabelKValue_1.configure(foreground="#000000")
        self.TLabelKValue_1.configure(font="TkDefaultFont")
        self.TLabelKValue_1.configure(relief="flat")
        self.TLabelKValue_1.configure(anchor='w')
        self.TLabelKValue_1.configure(justify='left')
        self.TLabelKValue_1.configure(text='''Radius (for RangeQ)''')

        self.SpinboxQueryRadiusValue = tk.Spinbox(self.TLabelframe2, from_=0.0, to=1.0)
        self.SpinboxQueryRadiusValue.place(relx=0.303, rely=0.748
                , relheight=0.174, relwidth=0.052, bordermode='ignore')
        self.SpinboxQueryRadiusValue.configure(activebackground="#f9f9f9")
        self.SpinboxQueryRadiusValue.configure(background="white")
        self.SpinboxQueryRadiusValue.configure(font="-family {gothic} -size 12")
        self.SpinboxQueryRadiusValue.configure(highlightbackground="black")
        self.SpinboxQueryRadiusValue.configure(increment="0.1")
        self.SpinboxQueryRadiusValue.configure(justify='right')
        self.SpinboxQueryRadiusValue.configure(selectbackground="blue")
        self.SpinboxQueryRadiusValue.configure(selectforeground="white")
        self.SpinboxQueryRadiusValue.configure(textvariable=similarity_support.spinboxQueryRadius)

        self.TComboboxAttReferenceQ = ttk.Combobox(self.TLabelframe2)
        self.TComboboxAttReferenceQ.place(relx=0.605, rely=0.261, relheight=0.2
                , relwidth=0.25, bordermode='ignore')
        self.value_list = ['Attributes',]
        self.TComboboxAttReferenceQ.configure(values=self.value_list)
        self.TComboboxAttReferenceQ.configure(font="-family {gothic} -size 12")
        self.TComboboxAttReferenceQ.configure(justify='center')
        self.TComboboxAttReferenceQ.configure(textvariable=similarity_support.comboboxAttRefQ)
        self.TComboboxAttReferenceQ.configure(takefocus="")

        self.btnRetrieveTuples = ttk.Button(self.TLabelframe2)
        self.btnRetrieveTuples.place(relx=0.39, rely=0.565, height=42, width=184
                , bordermode='ignore')
        self.btnRetrieveTuples.configure(command=similarity_support.btnRetrieveTuples)
        self.btnRetrieveTuples.configure(takefocus="")
        self.btnRetrieveTuples.configure(text='''Run Traditional Query''')

        self.btnScatterPlot = tk.Button(self.TLabelframe2)
        self.btnScatterPlot.place(relx=0.01, rely=0.191, height=85, width=110
                , bordermode='ignore')
        self.btnScatterPlot.configure(activebackground="#f9f9f9")
        self.btnScatterPlot.configure(command=similarity_support.btnScatterPlot)
        self.btnScatterPlot.configure(text='''Show MDS in Scatter Plot''')
        self.btnScatterPlot.configure(wraplength="100")

        self.Label1 = tk.Label(self.TLabelframe2)
        self.Label1.place(relx=0.605, rely=0.087, height=15, width=149
                , bordermode='ignore')
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(text='''Reference Attribute''')

        self.RadiobuttonKNNOption = tk.Radiobutton(self.TLabelframe2)
        self.RadiobuttonKNNOption.place(relx=0.402, rely=0.261, relheight=0.148
                , relwidth=0.046, bordermode='ignore')
        self.RadiobuttonKNNOption.configure(activebackground="#f9f9f9")
        self.RadiobuttonKNNOption.configure(command=similarity_support.cmbKnnSelected)
        self.RadiobuttonKNNOption.configure(justify='left')
        self.RadiobuttonKNNOption.configure(text='''kNN''')
        self.RadiobuttonKNNOption.configure(value="1")
        self.RadiobuttonKNNOption.configure(variable=similarity_support.radioQueryVar)

        self.RadiobuttonRangeOption = tk.Radiobutton(self.TLabelframe2)
        self.RadiobuttonRangeOption.place(relx=0.473, rely=0.261, relheight=0.148
                , relwidth=0.102, bordermode='ignore')
        self.RadiobuttonRangeOption.configure(activebackground="#f9f9f9")
        self.RadiobuttonRangeOption.configure(command=similarity_support.cmbRangeSelected)
        self.RadiobuttonRangeOption.configure(justify='left')
        self.RadiobuttonRangeOption.configure(text='''Range''')
        self.RadiobuttonRangeOption.configure(value="0")
        self.RadiobuttonRangeOption.configure(variable=similarity_support.radioQueryVar)

        self.btnScatterPlotCorr = tk.Button(self.TLabelframe2)
        self.btnScatterPlotCorr.place(relx=0.872, rely=0.183, height=85
                , width=110, bordermode='ignore')
        self.btnScatterPlotCorr.configure(activebackground="#f9f9f9")
        self.btnScatterPlotCorr.configure(command=similarity_support.btnScatterPlotCorr)
        self.btnScatterPlotCorr.configure(text='''Show MDS in Scatter Plot with Correlations''')
        self.btnScatterPlotCorr.configure(wraplength="100")

        self.TLabelInfoCompleteQuery = ttk.Label(top)
        self.TLabelInfoCompleteQuery.place(relx=0.426, rely=0.563, height=30
                , width=223)
        self.TLabelInfoCompleteQuery.configure(background="#d9d9d9")
        self.TLabelInfoCompleteQuery.configure(foreground="#000000")
        self.TLabelInfoCompleteQuery.configure(font="-family {bitstream charter} -size 14")
        self.TLabelInfoCompleteQuery.configure(relief="flat")
        self.TLabelInfoCompleteQuery.configure(anchor='w')
        self.TLabelInfoCompleteQuery.configure(justify='left')
        self.TLabelInfoCompleteQuery.configure(text='''Traditional Query Results''')

        self.TLabelInfoCorrelationQuery = ttk.Label(top)
        self.TLabelInfoCorrelationQuery.place(relx=0.426, rely=0.774, height=20
                , width=313)
        self.TLabelInfoCorrelationQuery.configure(background="#d9d9d9")
        self.TLabelInfoCorrelationQuery.configure(foreground="#000000")
        self.TLabelInfoCorrelationQuery.configure(font="-family {bitstream charter} -size 14")
        self.TLabelInfoCorrelationQuery.configure(relief="flat")
        self.TLabelInfoCorrelationQuery.configure(anchor='w')
        self.TLabelInfoCorrelationQuery.configure(justify='left')
        self.TLabelInfoCorrelationQuery.configure(text='''Correlation-based Query Results''')

        self.TFrameDataMainPageCompQ = ttk.Frame(top)
        self.TFrameDataMainPageCompQ.place(relx=0.422, rely=0.598, relheight=0.17
                , relwidth=0.566)
        self.TFrameDataMainPageCompQ.configure(relief='groove')
        self.TFrameDataMainPageCompQ.configure(borderwidth="1")
        self.TFrameDataMainPageCompQ.configure(relief="groove")

        self.TFrameDataMainPageCorrQ = ttk.Frame(top)
        self.TFrameDataMainPageCorrQ.place(relx=0.422, rely=0.804
                , relheight=0.181, relwidth=0.566)
        self.TFrameDataMainPageCorrQ.configure(relief='groove')
        self.TFrameDataMainPageCorrQ.configure(borderwidth="1")
        self.TFrameDataMainPageCorrQ.configure(relief="groove")

        self.TFrameScatterMDSCorrelation = ttk.Frame(top)
        self.TFrameScatterMDSCorrelation.place(relx=0.722, rely=0.141
                , relheight=0.42, relwidth=0.266)
        self.TFrameScatterMDSCorrelation.configure(relief='groove')
        self.TFrameScatterMDSCorrelation.configure(borderwidth="1")
        self.TFrameScatterMDSCorrelation.configure(relief="groove")

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.TButtonCloseSimilarity = ttk.Button(top)
        self.TButtonCloseSimilarity.place(relx=0.919, rely=0.022, height=102
                , width=104)
        self.TButtonCloseSimilarity.configure(command=similarity_support.TButtonCloseSimilarity)
        self.TButtonCloseSimilarity.configure(takefocus="")
        self.TButtonCloseSimilarity.configure(text='''Close''')

        self.TButtonSaveHeatmap = ttk.Button(top)
        self.TButtonSaveHeatmap.place(relx=0.012, rely=0.936, height=42
                , width=604)
        self.TButtonSaveHeatmap.configure(command=similarity_support.btnSaveHeatmap)
        self.TButtonSaveHeatmap.configure(takefocus="")
        self.TButtonSaveHeatmap.configure(text='''Save heatmap image''')

if __name__ == '__main__':
    vp_start_gui()





